#!/usr/bin/python3

import configparser
import csv
import getopt
import os
import sys


def logo():
    print('''
##############################################################
##############################################################
#
# PYTHON 3
# BATCH ORGANIZATIONAL INFORMATION SCRIPT v0.1
#
# Created by: Andrew Sturm
# Created on: 2020-07-27
#
##############################################################
##############################################################

This script will go through the process of filling your Google Directory with 
your organizational contact information.

The CSV is generated by the command: 'gam print users allfields todrive'.

From there, File > Download > CSV and point this program to that path.
''')


def main(argv):
    # Variables
    choice = ""
    emails = []
    read = ""
    write = ""

    config = configparser.ConfigParser()
    config.read('config.ini')
    gam = config['gam']['gam']
    # Check for the correct arguments
    try:
        opts, args = getopt.getopt(argv, "dhi:rv", ["doit", "help", "input",
                                                    "read", "version"])
    except getopt.GetoptError:
        print("Invalid argument.\n\nUsage: orginfo.py -i file")
        exit()

    # Get opt cases
    try:
        for opt, arg in opts:
            if opt in "--doit":
                write = 1
            elif opt in ("-h", "--help"):
                print("Usage: orginfo.py -i file")
                print("The CSV is generated by the command: 'gam print users \
allfields todrive'.")
                print("From there, File > Download > CSV and point this \
program to that path.")
                exit()

            elif opt in ("-i", "--input"):
                try:
                    with open(arg, newline='') as csvfile:
                        reader = csv.DictReader(csvfile)
                        header = reader.fieldnames

                        for row in reader:
                            # Mandatory Fields
                            building = row['Building']
                            email = row['Email']
                            org = row['Organization']
                            phone = row['Phone']
                            title = row['Title']

                            emails.append(email)

                            print(f"Building: {building}")
                            print(f"Email: {email}")
                            print(f"Organization: {org}")
                            print(f"Phone/Area: {phone}")
                            print(f"Title: {title}")

                            cmd = (gam+" update user "+email+" \
organization name \""+org+"\" title \""+title+"\" primary phone type work \
value "+phone+" primary")
                            print(cmd)
                            try:
                                if "--doit" in argv:
                                    os.system(cmd)
                                else:
                                    print("\nPlease specify '--doit' if \
you wish to write to the organization contact information.")

                                cmd = (gam+" update user "+email+" \
location area "+phone+" building \""+building+"\" endlocation")
                                print(cmd)
                                if "--doit" in argv:
                                    os.system(cmd)
                                else:
                                    print("\nPlease specify '--doit' if \
you wish to write to the organization contact information.")
                                print()

                            except KeyboardInterrupt:
                                print("Keyboard interrupt signal \
detected.\nExiting...")
                                exit()

                except KeyboardInterrupt:
                    print("Keyboard interrupt signal detected.\nExiting...")
                    exit()

            elif opt in ("-r", "--read"):
                read = True

            elif opt in ("-v", "--version"):
                logo()
                exit()

    except KeyboardInterrupt:
        print("Keyboard interrupt signal detected.\nExiting...")
        exit()

    except FileNotFoundError:
        print("File not found.")
        print("Usage: orginfo.py -i file")
        exit()

    except KeyError:
        print("Check your CSV file for validity and try again.\nCreate CSV \
from GAM with: 'gam print users allfields todrive'")
        exit()

    except IsADirectoryError:
        print("Check your -i path. Ensure it is pointing to a .csv and not a \
directory.")
        exit()


# Start the main loop
if __name__ == "__main__":
    if sys.argv[1:]:
        main(sys.argv[1:])
    else:
        print("Usage: orginfo.py -i file")
